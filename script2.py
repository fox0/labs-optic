#!/usr/bin/env python3
import math
import logging

log = logging.getLogger(__name__)
logging.basicConfig(format='%(asctime)s [%(levelname)s] %(funcName)s:%(name)s:%(lineno)d: %(message)s',
                    level=logging.DEBUG)

result1 = [0.45457393483709274, 0.14066416040100252, 0.18734335839598998, 0.18107769423558898, 0.2236842105263158,
           0.22180451127819548, 0.16290726817042606, 0.11967418546365914, 0.1425438596491228, 0.19329573934837094,
           0.13174019607843138, 0.24571078431372548, 0.13664215686274508, 0.09681372549019608, 0.16482843137254902,
           0.19301470588235295, 0.11151960784313726, 0.19362745098039216, 0.2659313725490196, 0.3180147058823529]
result2 = [0.45958646616541354, 0.5955513784461153, 0.5303884711779449, 0.5200501253132832, 0.28884711779448624,
           0.28728070175438597, 0.2741228070175439, 0.32863408521303256, 0.45144110275689225, 0.5081453634085213,
           0.6776960784313726, 0.22487745098039216, 0.5716911764705882, 0.4074754901960784, 0.3314950980392157,
           0.24142156862745098, 0.5747549019607843, 0.5814950980392157, 0.5006127450980392, 0.2855392156862745]
result3 = [0.041040100250626564, 0.1588345864661654, 0.20708020050125314, 0.20206766917293234, 0.4342105263157895,
           0.3925438596491228, 0.4718045112781955, 0.4282581453634085, 0.2973057644110276, 0.18452380952380953,
           0.11458333333333333, 0.3939950980392157, 0.20098039215686275, 0.39889705882352944, 0.38174019607843135,
           0.42401960784313725, 0.22549019607843138, 0.08946078431372549, 0.11029411764705882, 0.20526960784313725]


def get_student_k(alpha, m):
    return {
        (0.05, 4): 2.132,
        # …
        (0.05, 18): 2.101,
        (0.05, 19): 2.093,
    }[(alpha, m)]


def get_smirnov_k(alpha, n):
    """Критические значения критерия Смирнова"""
    return {
        (0.05, 5): 1.67,
        # …
        (0.05, 18): 2.50,
        (0.05, 19): 2.53,
        (0.05, 20): 2.53,
    }[alpha, n]


alpha = 0.05

for i, ls in enumerate((result1, result2, result3)):
    print('Фаза %d' % (i + 1))
    while True:
        n = len(ls)
        print('1. Объём выборки = %d' % n)
        x_avr = sum(ls) / n
        print('2. Среднее выборочное арифметическое = %.3f' % x_avr)
        s_x2 = sum((x_i - x_avr) ** 2 for x_i in ls) / (n - 1)
        print('3. Выборочная дисперсия = %.3f' % s_x2)
        s_x = math.sqrt(s_x2)
        print('4. Выборочное среднее квадратичное отклонение = %.3f' % s_x)
        v = s_x / x_avr * 100
        print('5. Выборочный коэффициент вариации = %.3f%%' % v)
        m_x = x_avr
        m = n - 1
        delta = get_student_k(alpha, m) * s_x / math.sqrt(n)
        print('6. Доверительный интервал = %.3f ± %.3f' % (m_x, delta))

        print('7. Проверка на наличие в выборке грубых погрешностей по критерию Смирнова.')
        ls.sort()
        print('7.1. Нулевая гипотеза H0: среди значений нет грубых погрешностей.')
        print('7.2. Альтернативная гипотеза H1: значение %.3f в выборке является грубой погрешностью.' % ls[-1])
        u = (ls[-1] - x_avr) / s_x
        print('7.3. u = %.3f' % u)
        print('7.4. alpha = %.3f' % alpha)
        u_t = get_smirnov_k(alpha, n)
        print('7.5. u_t = %.3f' % u_t)
        if u > u_t:
            print('7.6. %.3f > %.3f = true' % (u, u_t))
            print('''7.7. Поскольку значение статистики попало в критическую область, то нулевая гипотеза \
отвергается и в качестве рабочей принимается альтернативная. Пересчёт…''')
            del ls[-1]
            continue
        else:
            print('7.6. %.3f > %.3f == false' % (u, u_t))
            print('7.7. Принимается нулевая гипотеза.')

        # todo копипаста :)
        print('7. Проверка на наличие в выборке грубых погрешностей по критерию Смирнова.')
        ls.sort()
        print('7.1. Нулевая гипотеза H0: среди значений нет грубых погрешностей.')
        print('7.2. Альтернативная гипотеза H1: значение %.3f в выборке является грубой погрешностью.' % ls[0])
        u = (x_avr - ls[0]) / s_x
        print('7.3. u = %.3f' % u)
        print('7.4. alpha = %.3f' % alpha)
        u_t = get_smirnov_k(alpha, n)
        print('7.5. u_t = %.3f' % u_t)
        if u > u_t:
            print('7.6. %.3f > %.3f = true' % (u, u_t))
            print('''7.7. Поскольку значение статистики попало в критическую область, то нулевая гипотеза \
отвергается и в качестве рабочей принимается альтернативная. Пересчёт…''')
            del ls[0]
            continue
        else:
            print('7.6. %.3f > %.3f == false' % (u, u_t))
            print('7.7. Принимается нулевая гипотеза.')
        break
    print('Результат после отсева грубых погрешностей: %.2f%%\n' % (x_avr * 100))
